version: "3"
services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile-dev
    image: media_app_dev
    container_name: media_app_dev
    environment:
      BASIC_AUTH_PASS: "pass"
      BASIC_AUTH_USER: "media"
      BASIC_ENABLED: "true"
      BROWSER_BASE_URL: "http://127.0.0.1:8888"
      ES_URL: "http://db:9200"
      NUXT_HOST: "0.0.0.0"
      NUXT_PORT: "8888"
    networks:
      - default
    ports:
      - "0.0.0.0:8888:8888"
    volumes:
      - ${PWD}/app:/app
      - /app/node_modules
    restart: on-failure
    command: ["sleep", "infinity"]

  db:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: media_db
    environment:
      discovery.type: "single-node"
      ELASTIC_PASSWORD: "media_elasticsearch_passwd"
      ES_JAVA_OPTS: "-Xms4g -Xmx4g -Xlog:disable -Xlog:all=warning:stderr:utctime,level,tags -Xlog:gc=warning:stderr:utctime"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - default
    volumes:
      - ${PWD}/Elasticsearch/data:/usr/share/elasticsearch/data:rw
      - ${PWD}/Elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ${PWD}/Elasticsearch/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties:ro
    restart: on-failure

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: media_kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://db:9200"
    ports:
      - "0.0.0.0:5601:5601"
    networks:
      - default
    restart: on-failure

networks:
  default:
    external:
      name: media_network
