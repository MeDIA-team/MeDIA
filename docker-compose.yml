version: "3"
services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: ghcr.io/media-team/media_app:${MEDIA_DOCKER_IMAGE_TAG}
    container_name: media_app
    environment:
      BASIC_AUTH_PASS: "pass" # Basic 認証の password
      BASIC_AUTH_USER: "media" # Basic 認証の user name
      BASIC_ENABLED: "true" # Basic 認証をかけるかどうか (true or false)
      BROWSER_BASE_URL: "http://127.0.0.1:8888" # クライアントから見た MeDIA App の URL
      ES_URL: "http://db:9200" # Elasticsearch の URL (docker network を使っているため変更する必要がない)
      NUXT_HOST: "0.0.0.0" # MeDIA App を起動する Host (docker network を使っているため変更する必要がない)
      NUXT_PORT: "8080" # MeDIA App を起動する Port (docker network を使っているため変更する必要がない)
    networks:
      - default
    ports:
      - "0.0.0.0:8080:8080"
    volumes:
      - ${PWD}/app/data:/app/data
    restart: on-failure
    command:
      [
        "wait-for-it",
        "-s",
        "db:9200",
        "--",
        "yarn",
        "start"
      ]
    logging:
      driver: syslog
      options:
        syslog-facility: local0
        tag: "{{.Name}}"

  db:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: media_db
    environment:
      discovery.type: "single-node"
      ELASTIC_PASSWORD: "media_elasticsearch_passwd"
      ES_JAVA_OPTS: "-Xms16g -Xmx16g -Xlog:disable -Xlog:all=warning:stderr:utctime,level,tags -Xlog:gc=warning:stderr:utctime"
      TAKE_FILE_OWNERSHIP: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - default
    volumes:
      - ${PWD}/Elasticsearch/data:/usr/share/elasticsearch/data:rw
      - ${PWD}/Elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ${PWD}/Elasticsearch/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties:ro
    restart: on-failure
    logging:
      driver: syslog
      options:
        syslog-facility: local0
        tag: "{{.Name}}"

networks:
  default:
    name: media_network
